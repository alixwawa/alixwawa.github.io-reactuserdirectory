{"version":3,"sources":["components/Search/index.js","components/TableContainer/index.js","components/Head/index.js","components/Body/index.js","App.js","index.js"],"names":["Search","props","className","value","searchTerm","onChange","editSearchTerm","type","placeholder","aria-label","Table","children","Head","scope","onClick","sortBy","Body","id","name","occupation","yearsExperience","App","state","employees","sort","a","b","setState","e","target","dynamicSearch","filter","employee","toLowerCase","includes","this","filterBy","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"iNAiBeA,MAbf,SAAgBC,GACZ,OACI,yBAAKC,UAAU,+BACX,+CACA,0BAAMA,UAAU,eACZ,2BAAOC,MAAOF,EAAMG,WAAYC,SAAUJ,EAAMK,eAAgBJ,UAAU,uBAAuBK,KAAK,OAAOC,YAAY,SAASC,aAAW,cCI9IC,MAVf,SAAeT,GACb,OACE,oCACE,2BAAOC,UAAU,mCACdD,EAAMU,YCSAC,MAbf,SAAeX,GACX,OACI,+BACI,4BACI,wBAAIY,MAAM,OAAV,MACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,MAAMC,QAAS,kBAAMb,EAAMc,UAAUb,UAAU,UAAzD,uBCMDc,MAbf,SAAcf,GACV,OACI,+BACI,4BACI,4BAAKA,EAAMgB,IACX,4BAAKhB,EAAMiB,MACX,4BAAKjB,EAAMkB,YACX,4BAAKlB,EAAMmB,oB,OCkDZC,E,4MAnDbC,MAAQ,CACNC,YACAnB,WAAY,I,EAGdW,OAAS,SAAAK,GAGP,IAAMG,EAAY,EAAKD,MAAMC,UAAUC,MAAK,SAACC,EAAGC,GAAJ,OACzCD,EAAIC,EAAK,GAAU,KAEtB,EAAKC,SAAS,CAAEJ,e,EAGlBjB,eAAiB,SAACsB,GAChB,EAAKD,SAAS,CAACvB,WAAYwB,EAAEC,OAAO1B,S,EAGtC2B,cAAgB,WACd,OAAO,EAAKR,MAAMC,UAAUQ,QAAO,SAAAC,GAAQ,OAAIA,EAASd,KAAKe,cAAcC,SAAS,EAAKZ,MAAMlB,WAAW6B,mB,uDAI1G,OACE,oCACE,kBAAC,EAAD,CACE9B,MAAOgC,KAAKb,MAAMlB,WAClBc,KAAK,aACLb,SAAU8B,KAAK7B,eACfC,KAAK,OACLC,YAAY,eACd,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEO,OAAQoB,KAAKpB,OACbqB,SAAUD,KAAKC,WAGhBD,KAAKb,MAAMC,UAAUc,KAAI,SAAAL,GAAQ,OAChC,kBAAC,EAAD,CACEf,GAAIe,EAASf,GACbqB,IAAKN,EAASf,GACdC,KAAMc,EAASd,KACfC,WAAYa,EAASb,WACrBC,gBAAiBY,EAASZ,2B,GA7CtBmB,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.bd17eba8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Search(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-dark\">\r\n            <h1> User Directory</h1>\r\n            <form className=\"form-inline\">\r\n                <input value={props.searchTerm} onChange={props.editSearchTerm} className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n                    \r\n            </form>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\n\r\n\r\nfunction Table(props) {\r\n  return (\r\n    <>\r\n      <table className=\"table table-bordered table-dark\">\r\n        {props.children}\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Table;","import React from \"react\";\r\n\r\n\r\nfunction Head (props) {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">id</th>\r\n                <th scope=\"col\">name</th>\r\n                <th scope=\"col\">occupation</th>\r\n                <th scope=\"col\" onClick={() => props.sortBy()} className=\"sortBy\">Years Experience</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nexport default Head;\r\n\r\n","import React from \"react\";\r\n\r\n\r\nfunction Body(props) {\r\n    return (\r\n        <tbody>\r\n            <tr>\r\n                <td>{props.id}</td>\r\n                <td>{props.name}</td>\r\n                <td>{props.occupation}</td>\r\n                <td>{props.yearsExperience}</td>\r\n            </tr>\r\n        </tbody>\r\n    );\r\n}\r\n\r\nexport default Body;\r\n\r\n","import React, { Component } from \"react\";\nimport Search from \"./components/Search\"\nimport Table from \"./components/TableContainer\";\nimport Head from \"./components/Head\";\nimport Body from \"./components/Body\";\nimport employees from \"./employees.json\";\n\nclass App extends Component {\n\n  state = {\n    employees,\n    searchTerm: ''\n  };\n\n  sortBy = yearsExperience => {\n    // console.log(\"hi\")\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const employees = this.state.employees.sort((a, b) =>\n      (a > b) ? 1 : -1 ? -1 : 1)\n    // Set this.state.friends equal to the new friends array\n    this.setState({ employees });\n  };\n\n  editSearchTerm = (e) => {\n    this.setState({searchTerm: e.target.value})\n  }\n\n  dynamicSearch = () => {\n    return this.state.employees.filter(employee => employee.name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n  }\n\n  render() {\n    return (\n      <>\n        <Search\n          value={this.state.searchTerm}\n          name=\"occupation\"\n          onChange={this.editSearchTerm}\n          type=\"text\"\n          placeholder=\"occupation\" />\n        <Table>\n          <Head\n            sortBy={this.sortBy}\n            filterBy={this.filterBy}\n          />\n          \n          {this.state.employees.map(employee => (        \n            <Body\n              id={employee.id}\n              key={employee.id}\n              name={employee.name}\n              occupation={employee.occupation}\n              yearsExperience={employee.yearsExperience} />\n          ))}\n        </Table>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}